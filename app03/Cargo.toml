[package]
authors = ["Thorben JÃ¤ndling <thorbenj@users.noreply.github.com>"]
edition = "2021"
readme = "README.md"
name = "app03"
version = "0.2.0"

[dependencies]
# Only set the critical section feature, if you are using a bare-metal platform
# without any RTOS
# See https://github.com/rust-embedded/critical-section for further details.
cortex-m = { version = "0.7.4", features = ["critical-section-single-core"]}
cortex-m-rt = { version = "0.7.3", features = ["device"] }
cortex-m-semihosting = "0.3.3"

panic-itm = { version = "0.4.2" }

# Replace stm32f303xc with your target chip, see next section for more info
stm32f3xx-hal = { version = "0.10.0", features = ["ld", "rt", "stm32f303xc"] }

rtic = { version = "2.1.1", features = ["thumbv7-backend"] }
rtic-monotonics = { version = "1.5.0", features = ["cortex-m-systick"] }

# Uncomment for the allocator example.
# alloc-cortex-m = "0.4.0"

# Uncomment for the device example.
# Update `memory.x`, set target to `thumbv7em-none-eabihf` in `.cargo/config`,
# and then use `cargo build --examples device` to build it.
# [dependencies.stm32f3]
# features = ["stm32f303", "rt"]
# version = "0.7.1"

fast-math = "0.1.1"

# this lets you use `cargo fix`!
[[bin]]
name = "app03"
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations
